name: Build and Artifact the ESP-IDF Project

on:
  push:

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install prerequisites
        run: |
          sudo apt-get install git wget flex bison gperf python3 python3-pip python3-setuptools cmake ninja-build ccache libffi-dev libssl-dev dfu-util
          cmake --version

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Install ESP-IDF
        run:  ./esp-idf/install.sh

      - name: Set up the environment variables and Build project
        run:  |
            source ./esp-idf/export.sh
            mv esp32-camera esp-idf/components
            cp -rf micropython-camera-driver/src micropython/ports/esp32
            cd micropython/ports/esp32
            echo 'CONFIG_GC2145_SUPPORT=y' >> boards/ESP32_GENERIC_S3/sdkconfig.board
            echo '#define MODULE_CAMERA_ENABLED  (1)' >> boards/ESP32_GENERIC_S3/mpconfigboard.h

            make BOARD=ESP32_GENERIC_S3 submodules
            make USER_C_MODULES=../src/micropython.cmake BOARD=ESP32_GENERIC_S3 all
      
      - name: Archive build output artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Archive build output
          path: |
            micropython/ports/esp32/build-ESP32_GENERIC_S3/firmware.bin
            micropython/ports/esp32/build-ESP32_GENERIC_S3/micropython.bin
            micropython/ports/esp32/build-ESP32_GENERIC_S3/partition_table/partition-table.bin
            micropython/ports/esp32/build-ESP32_GENERIC_S3/bootloader/bootloader.bin
